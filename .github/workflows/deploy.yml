name: Test and Deploy to VPS

on:
  workflow_run:
    workflows: ["Build and Push Docker Image"]
    types:
      - completed

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Check for .go file changes
        id: go_changes
        run: |
          if git diff --name-only HEAD~1 HEAD | grep -q '\.go$'; then
            echo "go_changes=true" >> $GITHUB_ENV
          else
            echo "go_changes=false" >> $GITHUB_ENV
          fi

      - name: Set up Go
        if: env.go_changes == 'true'
        uses: actions/setup-go@v5
        with:
          go-version: "1.23"

      - name: Install dependencies
        if: env.go_changes == 'true'
        run: go mod tidy

      - name: Run tests
        if: env.go_changes == 'true'
        run: go test -race ./... -count=1

  deploy:
    runs-on: ubuntu-latest
    needs: test
    if: success()
    permissions:
      contents: write
      packages: write
      id-token: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 2 # Need at least 2 commits to compare changes

      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.VPS_SSH_KEY }}

      - name: Check if docker-compose.yml has changed
        id: compose_changed
        run: |
          if git diff --name-only HEAD~1 HEAD | grep -q '^docker-compose.yml$'; then
            echo "compose_changed=true" >> $GITHUB_ENV
          else
            echo "compose_changed=false" >> $GITHUB_ENV
          fi

      - name: Copy updated docker-compose.yml to VPS
        if: env.compose_changed == 'true'
        run: |
          scp -o StrictHostKeyChecking=no docker-compose.yml github_runner@${{ secrets.VPS_HOST }}:/srv/dockerdata/Search-Backend/docker-compose.yml

      - name: Deploy to VPS
        env:
          CONTAINER_NAME: ai-backend
          IMAGE_NAME: ghcr.io/arinji2/ai-backend:latest
        run: |
          ssh -o StrictHostKeyChecking=no github_runner@${{ secrets.VPS_HOST }} << EOF
          echo "Connected to VPS"
          docker pull $IMAGE_NAME
          cd /srv/dockerdata/Search-Backend
          docker compose down || true
          docker compose up -d
          docker image prune -f
          EOF
